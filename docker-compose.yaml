networks:
  bit-net:
    driver: bridge
  clear-net:
    driver: bridge

configs:
  bit-config:
    file: ./src/Bit/bit.conf

volumes:
  redis-master-data:
  grafana-storage:

services:
  bit1:
    build:
      context: ./src/
      dockerfile: Dockerfile
    networks:
      - bit-net
    depends_on:
      redis-master:
        condition: service_healthy
    environment:
      - bit_config=./app/bit-conf/bit.conf

  bit2:
    build:
      context: ./src/
      dockerfile: Dockerfile
    networks:
      - bit-net
    depends_on:
      redis-master:
        condition: service_healthy
    environment:
      - bit_config=./app/bit-conf/bit.conf

  redis-master:
    image: redis:6.2
    command: redis-server --port 6379 --appendonly yes
    networks:
      - bit-net
    volumes:
      - redis-master-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-replica1:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    command: redis-server --port 6379 --slaveof redis-master 6379 --appendonly yes
    depends_on:
      redis-master:
        condition: service_healthy
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-replica2:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    command: redis-server --port 6379 --slaveof redis-master 6379 --appendonly yes
    depends_on:
      redis-master:
        condition: service_healthy
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  sentinel1:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26379:26379"
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  sentinel2:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26380:26379"
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  sentinel3:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26381:26379"
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # UI
      - "6831:6831/udp" # UDP port for receiving traces
      - "14250:14250" # grpc
      - "14268:14268" # HTTP
    networks:
      - bit-net
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - bit-net
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    volumes:
      - grafana-storage:/var/lib/grafana

  nginx:
    build: 
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - clear-net
      - bit-net
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf

