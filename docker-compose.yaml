networks:
  bit-net:
    driver: bridge
  clear-net:
    driver: bridge


services:
  redis-master:
    image: redis:6.2
    ports:
      - "6379:6379"
    command: redis-server --port 6379 --appendonly yes
    networks:
      - bit-net
    volumes:
      - redis-master-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      OTEL_RESOURCE_ATTRIBUTES: "service.name=redis-master"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
  
  redis-replica1:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    command: redis-server --port 6379 --slaveof redis-master 6379 --appendonly yes
    depends_on:
      redis-master:
        condition: service_healthy
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  
  redis-replica2:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    command: redis-server --port 6379 --slaveof redis-master 6379 --appendonly yes
    depends_on:
      redis-master:
        condition: service_healthy
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  
  sentinel1:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26379:26379"
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  
  sentinel2:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26380:26379"
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  
  sentinel3:
    build:
      context: ./docker/redis
      dockerfile: sentinel
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26381:26379"
    networks:
      - bit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    networks:
      - bit-net
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics", "--zookeeper", "localhost:2181", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - bit-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "zookeeper-shell", "localhost:2181", "ls", "/"]
      interval: 30s
      timeout: 10s
      retries: 3

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./docker/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"  # gRPC
      - "4318:4318"  # HTTP/1.1
      - "55681:55681" # old OTLP port
    command: ["--config=/etc/otel-collector-config.yaml"]



volumes:
  redis-master-data:      
      
